.PROGRAM main()
    PRINT "Start programu"

    MESSAGES ON
    RIGHTY
    ABOVE

    TOOL tool0
    BASE base0
    SPEED 50 ALWAYS
    SPEED 200 MM/S, 20 DEG/S ALWAYS
    ACCURACY 5 ALWAYS
    CP ON

    TWAIT 1

    PRINT "Poczatek ruchu"

    JMOVE #j0
	TWAIT 1

	x1 = 0
	y1 = 0
	x2 = 7
	y2 = 7

	CALL movepiece
	;CALL mainloop

	TWAIT 1
	RETURN
.END




.PROGRAM mainloop
	port = 49152
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2
	max_length = 255
	tout_open = 60
	tout_rec = 60
	eret = 0
	ret = 0
	CALL open_socket ;Connecting communication
	IF sock_id < 0 THEN
		GOTO exit_end
	END

	WHILE (1) DO
		ret = 0
		CALL recv
		IF ret < 0 THEN
			PRINT "error:", ret
			GOTO exit
		END
		; process instr
		CALL handle_recieve
		IF eret < 0 THEN
			goto exit
		END

exit:
	CALL close_socket
exit_end:	
	RETURN
.END




.PROGRAM movepiece
	; call gripperopen

	point p2 = TRANS (,,,,,)

    	CALL get_pos(x1,y1,&p2)
	POINT .p2_temp = p2 + TRANS(,,-20,,,)
	LMOVE .p2_temp
    	TWAIT 1
	LMOVE p2
	; call gripper close
    	TWAIT 1
	LMOVE .p2_temp
    	TWAIT 1
	
	point p2 = TRANS (,,,,,)

    	CALL get_pos(x2,y2,&p2)
	POINT .p2_temp = p2 + TRANS(,,-20,,,)
	LMOVE .p2_temp
    	TWAIT 1
	LMOVE p2
	; call gripperopen
    	TWAIT 1
	LMOVE .p2_temp
    	TWAIT 1
    JMOVE #j0
	TWAIT 1
	RETURN
.END
.PROGRAM get_pos(.xx,.yy, .&target)
	POINT .v0 = board_origin1 - board_origin0
	POINT .v1 = board_origin2 - board_origin0

	.a0[0] = 0
	.a1[0] = 0

	decompose .a0[0] = .v0
	decompose .a1[0] = .v1



	POINT .offset = TRANS(.a0[0]*.xx/8+.a1[0]*.yy/8,.a0[1]*.xx/8+.a1[1]*.yy/8,.a0[2]*.xx/8+.a1[2]*.yy/8,0,0,0)

    point .target = board_origin0 + .offset
    RETURN
.END



.PROGRAM handle_recieve()
	x1 = val($mid($recv_buf[1],1,1))
	y1 = val($mid($recv_buf[1],2,1))
	x2 = val($mid($recv_buf[1],3,1))
	y2 = val($mid($recv_buf[1],4,1))
	CALL movepiece

	$end_buf[1] = "OK"
	CALL send(eret,$end_buf[1]) ;Sending end processing
	RETURN
.END



.PROGRAM open_socket() ;Starting communication ################### FROM DOCS
	.er_count =0
connect:
	TCP_CONNECT sock_id,port,ip[1],tout_open
	IF sock_id<0 THEN
		IF .er_count >= 5 THEN
			PRINT "Connection with PC failed. Program is stopped."
		ELSE
			.er_count = .er_count+1
			PRINT "TCP_CONNECT error id=",sock_id," error count=",.er_count
			GOTO connect
		END
	ELSE
		PRINT "TCP_CONNECT OK id=",sock_id
	END
.END

.PROGRAM recv() ;Communication Receiving data
	.num=0
	TCP_RECV ret,sock_id,$recv_buf[1],.num,tout_rec,max_length
	IF ret < 0 THEN
		PRINT "TCP_RECV error in RECV",ret
		$recv_buf[1]="000"
	ELSE
		IF .num > 0 THEN
			PRINT "TCP_RECV OK in RECV",ret
		ELSE
			$recv_buf[1]="000"
		END
	END
.END

.PROGRAM send(.ret,.$data) ;Communication Sending data
	$send_buf[1] = .$data
	buf_n = 1
	.ret = 1
send_rt:
	TCP_SEND sret,sock_id,$send_buf[1],buf_n,tout
	IF sret < 0 THEN
		.ret = -1
		PRINT "TCP_SEND error in SEND",sret
	ELSE
		PRINT "TCP_SEND OK in SEND",sret
	END
.END

.PROGRAM close_socket() ;Closing communication
	TCP_CLOSE ret,sock_id ;Normal socket closure
	IF ret < 0 THEN
		PRINT “TCP_CLOSE error ERROE=(”,ret,” ) “,$ERROR(ret)
		TCP_CLOSE ret1,sock_id ;Forced closure of socket (shutdown)
		IF ret1 < 0 THEN
			PRINT "TCP_CLOSE error id=",sock_id
		END
	ELSE
		PRINT "TCP_CLOSE OK id=",sock_id
	END
.END

.TRANS
    tool0 0 0 0 0 0 0 
    base0 0 0 0 0 0 0
    board_origin0       -0.000  -523.955  -221.231    90.000   169.728   -90.000
    board_origin1       -50.000  -523.955  -221.231    90.000   169.728   -90.000
    board_origin2       -0.000  -473.955  -221.231    90.000   169.728   -90.000
	j0      -43.745  -357.275    42.846    90.004   169.728   -89.997



 p1 0 0 0 0 0 0

.END


.JOINTS
   #j0  6.652   -16.885   107.864    -1.302    65.461    -6.006
.END


